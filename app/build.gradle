apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'


    }
}
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process


android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.example.video_to_frame"
        minSdkVersion 23
        targetSdkVersion 31
        multiDexEnabled true
        versionCode 1
        versionName "1.0"


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
        noCompress "pb"
    }
    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
            jniLibs.srcDirs = ['libs']
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        pickFirst 'lib/x86/libtranslate_jni.so'
        pickFirst 'lib/x86_64/libtranslate_jni.so'
        pickFirst 'lib/armeabi/libtranslate_jni.so'
        pickFirst 'lib/x86/libtranslate_jnir.so'
        pickFirst 'lib/armeabi-v7a/libtranslate_jni.so'
        pickFirst 'lib/x86/liblanguage_id_jni.so'
        pickFirst 'lib/arm64-v8a/liblanguage_id_jni.so'
        pickFirst 'lib/arm64-v8a/libtranslate_jni.so'
        pickFirst 'lib/x86_64/liblanguage_id_jni.so'
        pickFirst 'lib/armeabi-v7a/liblanguage_id_jni.so'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {

    //implementation 'androidx.appcompat:appcompat:1.2.0'

    //implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    //testImplementation 'junit:junit:4.+'
    //androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever:1.0.14'

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    //implementation 'org.pytorch:pytorch_android:1.7.0'
    implementation 'org.pytorch:pytorch_android_torchvision:1.9.0'

    implementation 'org.jetbrains:annotations:15.0'
    implementation 'org.tensorflow:tensorflow-lite:+'
    implementation 'org.tensorflow:tensorflow-android:1.13.1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    def lottieVersion = "3.0.7"
    implementation "com.airbnb.android:lottie:$lottieVersion"
    implementation "androidx.preference:preference:1.1.0"
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation "androidx.media:media:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "com.google.guava:guava:29.0-android"
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.mlkit:translate:16.1.2'
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    implementation 'com.google.firebase:firebase-config:21.0.1'
    implementation 'com.google.firebase:firebase-abt:21.0.0'
    implementation 'com.google.firebase:firebase-perf:20.0.4'
    implementation 'com.google.firebase:firebase-ml-natural-language:22.0.1'
    implementation 'com.google.firebase:firebase-ml-natural-language-language-id-model:20.0.8'

    implementation 'com.google.firebase:firebase-core:20.0.0'
    implementation 'com.google.firebase:firebase-ml-natural-language-translate:22.0.2'
    implementation 'com.google.firebase:firebase-ml-natural-language-translate-model:20.0.9'
    implementation 'com.google.mlkit:translate:16.1.2'
    implementation 'com.google.mlkit:language-id:17.0.1'
    implementation 'com.google.mlkit:common:17.4.0'
    implementation 'com.google.firebase:firebase-ml-natural-language-smart-reply-model:20.0.8'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.guava:guava:27.1-android'
    implementation 'org.pytorch:pytorch_android_lite:1.9.0'





}

apply plugin: 'com.android.application'




